Привет.

Это мой первый CI/CD деплой приложения, который я сделал как тестовое задание для Symphony Solutions.
Сначала всё запускалось вручную с моей локальной виртуалки, где были все конфиги, но потом я перенес это в GitHub Actions. 
Как же это работает?

- Воркфлоу deploy подтягивает конфиг терраформа main.tf с гита и создает AWS EC2 инстанс в указанном в конфиге регионе из определенного AMI образа. Также он создает volume и секгруппу для открытия портов 80 и 22 на инстансе и после создания выводит dns имя инстанса в файл ec2_dns_name.

- В main.tf указан путь к скрипту init.sh,в котором прописана первоначальная настройка инстанса. Он обновляет инстанс EC2 и устанавливает git и Docker, пуллит репозиторий на вируталку, откуда берет конфиг файл докера и создает образ, после создания и настройки хапускается контейнер apache2 на 80 порту.

- В Dockerfile прописан образ (ubuntu/apache2), на которого создавается кастомный образ, далее туда устанавливается git, прописывается конфиг репозитория и пуллится папка с кодом сайта, копируется в папку /var/www/html и открывается 80-й порт, а также запускается процесс apahce2 в фоновом режиме.

- После этого воркфлоу deploy пушит все изменения обратно в репозиторий, что бы передать dns имя инстанса воркфлоу push_changes, а таже обеспечить терраформ файлами .tfstate для возможности дестроя всей инфраструктуры с помощью воркфлоу destroy.

- Воркфлоу push_changes срабатывает только на push в репозиторий. Он получает dns имя инстанса EC2 из указанного выше файла и подключается к нему для того, что бы сделать checkout и обновить код сайта. Подключение происходит по ssh, далее с помощью docker exec команды git pull и cp передаются в контейнер.

- Воркфлоу destroy позволяет сделать terraform destroy и удалить всё созданное выше в 2 клика. Это реализовано благодаря чекауту .tfstate файлов в новый раннер, запускается вручную.
